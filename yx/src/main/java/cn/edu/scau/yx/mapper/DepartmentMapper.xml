<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.scau.yx.dao.DepartmentMapper">
  
  <select id="departmentCount"  resultType="int">
  	select
		count(d.id)
	from
		department d
  </select>
  
  <select id="findAllDepartmentName" resultType="String">
     select
        name
     from 
        department
  </select>
  
  <select id="findAllDepartment" resultType="Department">
     select
		d.id,
		d.name,
		d.president,
		d.vice_president,
		d.address,
		d.phone,
		d.zip_code,
		d.network_address,
		d.description
     from 
        department d
  </select>  
  
  <select id="findByName" parameterType="string" resultType="Department" >
  <bind name="dpname" value="'%' + dpname + '%'"/>
  	SELECT
		d.id,
		d.name,
		d.president,
		d.vice_president,
		d.address,
		d.phone,
		d.zip_code,
		d.network_address,
		d.description
	FROM
		department d
	<where>
		<if test="dpname !=null and dpname != ''">
        d.name like #{dpname}
		</if>
	</where>
  </select>
  
    <select id="findById" parameterType="int" resultType="Department" >
  	SELECT
		d.id,
		d.name,
		d.president,
		d.vice_president,
		d.address,
		d.phone,
		d.zip_code,
		d.network_address,
		d.description
	FROM
		department d
	<where>
		<if test="dpid !=null and dpid != ''">
        d.id = {dpid}
		</if>
	</where>
  </select>
  
  <delete id="deleteDepartment" parameterType="int" >
  	DELETE FROM department WHERE id=#{dpid}
  </delete>
  
  <insert id="insertDepartment" parameterType="Department" useGeneratedKeys="true">
  	INSERT INTO department(id,name,president,vice_president,address,phone,zip_code,network_address,description)
  	VALUES(#{id},#{name},#{president},#{vicePresident},#{address},#{phone},#{zipCode},#{networkAddress},#{description})
  </insert>
  
   <update id="updateDepartment" parameterType="Department" >
  	UPDATE department 
  	<set>
  		<if test="name != null">
  			name = #{name},
  		</if>
  		<if test="president != null">
  	 		president = #{president},
  		</if>
  		<if test="vicePresident != null">
  	 		vice_president = #{vicePresident},
  		</if>
  		<if test="address != null">
  	 		address = #{address},
  		</if>
  		<if test="phone != null">
  	 		phone = #{phone},
  		</if>
  		<if test="zipCode != null">
  	 		zip_code = #{zipCode},
  		</if>
  		<if test="networkAddress != null">
  	 		network_address = #{networkAddress},
  		</if>
  		<if test="description != null">
  	 		description = #{description}
  		</if>
  	</set>
  	WHERE id = #{id}
  </update>
</mapper>